/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const LibUtils = require('../../../util');
const HTTP = require('../../commons/addresses').HTTP;
const INTERFACES = require('../../../enums').INTERFACES;

const kSqreenBlockingStatus = Symbol('kSqreenBlockingStatus');

// TODO: add logs
const SEEN = new WeakSet();

const addHooks = function (fastify, ecoSystemInterface) {

    fastify.addHook('preValidation', (request, reply, done) => {

        const data = {
            [HTTP.HTTP_REQUEST_QUERY]: request.query,
            [HTTP.HTTP_REQUEST_URI_PARAMS]: request.params,
            [HTTP.HTTP_REQUEST_BODY]: request.body,
            [HTTP.HTTP_REQUEST_ENDPOINT]: request.context.config.url,
            [HTTP.HTTP_REQUEST_COOKIES]: request.cookies
        };
        LibUtils.multipleEmitIFNeeded(data, true);
        done();
    });

    fastify.addHook('onError', (request, reply, error, done) => {

        const blockingStatus = ecoSystemInterface.getInterface(INTERFACES.TRANSPORT).getBlockingStatus(error);
        if (blockingStatus !== null) {
            reply[kSqreenBlockingStatus] = blockingStatus;
        }
        done();
    });

    fastify.addHook('onSend', (request, reply, payload, done) => {

        if (reply[kSqreenBlockingStatus] !== undefined) {
            const todo = reply[kSqreenBlockingStatus];
            reply.status(todo.code || 500);
            const body = todo.body || '';
            const headers = todo.headers || {}; // TODO: test redirect works well
            reply.headers(headers);
            reply.header('content-length', body.length + 2);
            return done(null, todo.body);
        }
        done();
    });

};

module.exports = function (mod, ecoSystemInterface) {

    if (SEEN.has(mod)) {
        return mod;
    }
    SEEN.add(mod);

    const fastifyWrapper = function () {

        const app = mod.apply(this, arguments);
        addHooks(app, ecoSystemInterface);
        return app;
    };
    fastifyWrapper.fastify = fastifyWrapper;
    fastifyWrapper.default = fastifyWrapper;

    return fastifyWrapper;
};

module.exports.reset = function (mod) {

    SEEN.delete(mod);
};
