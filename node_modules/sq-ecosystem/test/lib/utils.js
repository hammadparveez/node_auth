/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Util = require('../../lib/util');

describe('Util', () => {

    describe('updateManifest', () => {

        it('should update the manifest properly', { plan: 1 }, (done) => {

            const manifest = {
                a: {
                    b: {
                        c: true
                    }
                },
                b: false
            };
            const res = Util.updateManifest(manifest, 'a.b.c=false,b=true');
            expect(res).to.equal({
                a: {
                    b: {
                        c: false
                    }
                },
                b: true
            });
            done();
        });

        it('should update the manifest properly', { plan: 1 }, (done) => {

            const manifest = {
                a: {
                    b: {
                        c: true
                    }
                },
                b: false,
                c: null
            };
            const res = Util.updateManifest(manifest, 'a.b.c=false,b.c=true,c=1', {
                ERROR: () => {}
            });
            expect(res).to.equal({
                a: {
                    b: {
                        c: false
                    }
                },
                b: false,
                c: null
            });
            done();
        });

        it('should update the manifest properly', { plan: 1 }, (done) => {

            const manifest = {
                a: {
                    b: {
                        c: true,
                        d: false
                    }
                },
                b: false
            };
            const res = Util.updateManifest(manifest, 'a.b.c=false,b=true,a.b=1,a .b.d  =1', {
                ERROR: () => {}
            });
            expect(res).to.equal({
                a: {
                    b: {
                        c: false,
                        d: true
                    }
                },
                b: true
            });
            done();
        });

        it('should update the manifest properly', { plan: 5 }, (done) => {

            const manifest = {
                a: {
                    b: {
                        c: true,
                        d: false
                    }
                },
                b: false
            };
            const res = Util.updateManifest(manifest, 'a.b.c=false,b=true,a.b=1,a.b.d-1', {
                ERROR: (e) => {

                    expect(e).to.exist();
                }
            });
            expect(res).to.equal({
                a: {
                    b: {
                        c: false,
                        d: false
                    }
                },
                b: true
            });
            done();
        });
    });
});
