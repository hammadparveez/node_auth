/**
 * Copyright (c) 2016 - 2020 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const FS = require('fs');
const Path = require('path');
const OS = require('os');
const Tar = require('tar');
const LIB_C_FAMILLY = require('detect-libc').family || 'unknown';

const TARGET = require('./setupInfo');
const TAR_PATH = Path.join(__dirname, 'vendor', `${OS.platform()}-${LIB_C_FAMILLY}`, OS.arch(), 'node-universal.tar.gz');
const TARGET_PATH = Path.join(__dirname, 'bindings');
const ARTEFACT_PATH = Path.join(__dirname, 'installed.json');

// TODO(@Simon): collect install errors and write them in file for easier debug/reporting
try {
    FS.mkdirSync(TARGET_PATH);
}
catch (e) {}

const printError = function () {

    console.log('Could not setup libSqreen for this setup:');
    console.log(JSON.stringify(TARGET));
};

const install = function () {

    if (!FS.existsSync(TAR_PATH)) {
        printError();
        return ;
    }

    const input = FS.createReadStream(TAR_PATH);
    const output = Tar.x({ C: Path.join(process.cwd(), 'bindings') });
    output.on('error', () => {
        printError();
        process.exit(0);
    })
    input.pipe(output);
};

const writeInstallArtefact = function () {

    try {
        FS.writeFileSync(ARTEFACT_PATH, JSON.stringify(TARGET, null, 2));
    }
    catch (_) {} // ignore error
}

try {
    install();
    writeInstallArtefact();
}
catch (e) {
    printError();
}
