/**
 * Copyright (c) 2016 - 2021 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
/**
 * This method compare 2 users with the following assumptions:
 * * there are no nested fields (BE rejects that)
 * * the users are JSON-ables
 * @param {Object} user1
 * @param {Object} user2
 */
module.exports.areSameUsers = function (user1, user2) {

    if (typeof user1 !== 'object' || typeof user2 !== 'object') {
        return false;
    }
    if (user1 === null || user2 === null) {
        return false;
    }
    // there is no chance that this function is called with identical objects

    const user1Keys = Object.getOwnPropertyNames(user1);
    const user2Keys = Object.getOwnPropertyNames(user2);

    if (user1Keys.length !== user2Keys.length) {
        return false;
    }

    for (let i = 0; i < user1Keys.length; ++i) {
        const key = user1Keys[i];
        if (user2Keys.indexOf(key) < 0) {
            return false;
        }
        if (user1[key] !== user2[key]) {
            return false;
        }
    }
    return true;
};
