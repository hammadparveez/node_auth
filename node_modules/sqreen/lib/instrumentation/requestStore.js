'use strict';

const MAX_ENTRIES = 1000;

module.exports = class extends Map {
    constructor() {

        super();

        this.cache = null;
    }

    getStore() {

        if (this.cache !== null) {
            return this.cache;
        }

        const result = {};

        for (const entry of super.entries()) {
            result[entry[0]] = entry[1];
        }

        this.cache = result;

        return result;
    }

    get(key) {

        const value = super.get(key);

        return value !== undefined ? value : null;
    }

    set(key, value) {

        if (value === null) {
            this.cache = null;
            return super.delete(key);
        }

        if (super.size >= MAX_ENTRIES) {
            const err = new Error('RequestStore MAX_ENTRIES reached');

            err.store_keys = Array.from(this.keys());

            throw err;
        }

        this.cache = null;
        super.set(key, value);
    };

    getKeyCount() {

        return super.size;
    }
};

